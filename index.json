[{"content":"2022.04.12. 08:43\n前天，昨天，今天，用了三天时间把iphone里的三万多张照片和视频清空了。\n从18年到2022年4月12日的三万多张照片，最后只留了26张在手机上。\n当然电脑里已经被备份了。\n用爱思助手和mac的图像捕捉分别备份了一次。\n应该没有图片误删。\n三万多张，爱思助手备份要快一些，以后恢复到手机里也比较方便。用了不到一个小时就备份完了。爱思还有一个好处是会给图片按时间重命名。图像捕捉就不会，好在图片的创建日期是记录着的。\n图像捕捉就要慢一点，用了几个小时，备份加删除，昨晚中途还关机了，好在已经备份了两万多张，剩下不到六千张。早上起来抄经放着不管，抄完经也就处理完了。\n要学会断舍离，以后要定期清一下手机照片。\n","permalink":"//samhawthorne.github.io/2022/04/12/cleanphoto/","summary":"2022.04.12. 08:43\n前天，昨天，今天，用了三天时间把iphone里的三万多张照片和视频清空了。\n从18年到2022年4月12日的三万多张照片，最后只留了26张在手机上。\n当然电脑里已经被备份了。\n用爱思助手和mac的图像捕捉分别备份了一次。\n应该没有图片误删。\n三万多张，爱思助手备份要快一些，以后恢复到手机里也比较方便。用了不到一个小时就备份完了。爱思还有一个好处是会给图片按时间重命名。图像捕捉就不会，好在图片的创建日期是记录着的。\n图像捕捉就要慢一点，用了几个小时，备份加删除，昨晚中途还关机了，好在已经备份了两万多张，剩下不到六千张。早上起来抄经放着不管，抄完经也就处理完了。\n要学会断舍离，以后要定期清一下手机照片。","title":"清了三万张照片"},{"content":"2022.04.10. 00:00\n晚上看了李一舟的课程，听他讲抖音，讲小红书。\n对抖音的那种流量思维又慢慢回想起来了。\n宝贝在旁边看qq相册，翻到以前做抖音拍养生茶的视频，一遍一遍地拍。当时觉得拍的不怎么样的视频，现在看来居然觉得还挺不错的。\n回想起以前做抖音的那段日子，真的有一种往前跑的感觉，很充实，很幸福。\n做抖音难吗？\n我觉得不难。\n重要的是要找回那种感觉，跑起来的感觉。\n一头扎进去的感觉。\n真的散漫太久了……\n忘了怎么跑了。\n那种感觉，你找回来了吗？\n","permalink":"//samhawthorne.github.io/2022/04/09/run/","summary":"2022.04.10. 00:00\n晚上看了李一舟的课程，听他讲抖音，讲小红书。\n对抖音的那种流量思维又慢慢回想起来了。\n宝贝在旁边看qq相册，翻到以前做抖音拍养生茶的视频，一遍一遍地拍。当时觉得拍的不怎么样的视频，现在看来居然觉得还挺不错的。\n回想起以前做抖音的那段日子，真的有一种往前跑的感觉，很充实，很幸福。\n做抖音难吗？\n我觉得不难。\n重要的是要找回那种感觉，跑起来的感觉。\n一头扎进去的感觉。\n真的散漫太久了……\n忘了怎么跑了。\n那种感觉，你找回来了吗？","title":"跑起来"},{"content":"2022.04.09. 19:04\n下班去地铁站的路上，看到有个男人在拉小提琴，拉的不咋的，但风景很特别。\n","permalink":"//samhawthorne.github.io/2022/04/07/xiabanlu/","summary":"2022.04.09. 19:04\n下班去地铁站的路上，看到有个男人在拉小提琴，拉的不咋的，但风景很特别。","title":"下班路"},{"content":"用了两周时间，终于把网址成功部署到GitHub上了。\n https://samhawthorne.github.io/  这是网址↑↑↑\n总结一下部署的过程：\n  先在本地创建hugo文件夹。下载hugo包到本地，新建bin和sites两个文件夹。把hugo压缩包里的文件全部解压到bin文件夹里面。\n  下载主题。用代码下载。\n  配置config.yml文件。\n  新建.github workflows两个文件夹。\n  配置自动化部署文件。notion_to_blog.yml和gh_pages.yml。\n  配置自动化脚本deploy.sh。\n  GitHub部署。\n  公钥密钥配置。\n  automate.io配置。\n  notion数据库配置。\n  notion API 配置。notion database id配置。\n  打开git bash。\n  同步本地和在线代码文件。git pull \u0026ndash;rebase origin develop。\n  运行自动化脚本deploy.sh。bash deploy.sh。\n  查看GitHub Action运行结果。\n  排查bug。\n  在notion写文章。\n  automate自动获取api同步到GitHub。只有新的一行automate才会读取。如果是更新原来的文章，需要手动在GitHub提交issue：notion-ci。\n  GitHub自动运行两个yml脚本，把notion内容转成md文件，再将md转成html，最后部署网页。\n  未完待续\u0026hellip;\u0026hellip;\n参考链接： 『手把手』利用 Github Actions 轻松部署 Hugo 博客_哔哩哔哩_bilibili\n用 Hugo 配合 Github Actions 自动构建我的博客 - Blog My Life (nashome.cn)\nnotion实现自动发布到hugo github博客 - Akkuman - 博客园 (cnblogs.com)\nnotion实现自动发布到hugo github博客 | Akkuman 的博客 (hacktech.cn)\n","permalink":"//samhawthorne.github.io/2022/04/06/bushu/","summary":"用了两周时间，终于把网址成功部署到GitHub上了。\n https://samhawthorne.github.io/  这是网址↑↑↑\n总结一下部署的过程：\n  先在本地创建hugo文件夹。下载hugo包到本地，新建bin和sites两个文件夹。把hugo压缩包里的文件全部解压到bin文件夹里面。\n  下载主题。用代码下载。\n  配置config.yml文件。\n  新建.github workflows两个文件夹。\n  配置自动化部署文件。notion_to_blog.yml和gh_pages.yml。\n  配置自动化脚本deploy.sh。\n  GitHub部署。\n  公钥密钥配置。\n  automate.io配置。\n  notion数据库配置。\n  notion API 配置。notion database id配置。\n  打开git bash。\n  同步本地和在线代码文件。git pull \u0026ndash;rebase origin develop。\n  运行自动化脚本deploy.sh。bash deploy.sh。\n  查看GitHub Action运行结果。\n  排查bug。\n  在notion写文章。\n  automate自动获取api同步到GitHub。只有新的一行automate才会读取。如果是更新原来的文章，需要手动在GitHub提交issue：notion-ci。","title":"部署成功总结"}]